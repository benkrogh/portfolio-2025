---
// Import necessary styles and components
import '../styles/fonts.css';
import '../styles/global.css';
import { ViewTransitions } from 'astro:transitions';
import Navigation from '../components/Navigation';

interface Props {
  title: string;
}

const { title } = Astro.props;
const currentPath = Astro.url.pathname;
console.log('Layout currentPath:', currentPath); // Debug log
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
	</head>
	<body>
		<Navigation client:load currentPath={currentPath} />
		<slot />
		
		<script>
			let lastScrollY = window.scrollY;
			let scrollTimeout;
			
			function updateScrollDirection() {
				const scrollY = window.scrollY;
				const direction = scrollY > lastScrollY ? "down" : "up";
				const isAtTop = scrollY <= 0;
				
				// Only update if there's a real change
				if (scrollY !== lastScrollY) {
					document.documentElement.dataset.scrollDirection = direction;
					document.documentElement.dataset.atTop = isAtTop.toString();
					lastScrollY = scrollY;
				}
			}
			
			// Set initial state
			updateScrollDirection();
			
			// Throttled scroll handler
			window.addEventListener('scroll', () => {
				clearTimeout(scrollTimeout);
				scrollTimeout = setTimeout(updateScrollDirection, 10);
			}, { passive: true });
		</script>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		padding: 0;
		background-color: #FCFAF7;
		width: 100%;
		height: 100%;
		overflow-x: hidden;
	}
</style>
